{"ast":null,"code":"var _jsxFileName = \"/Users/One/Desktop/Becode/chat/src/components/ChatMessages.js\";\nimport React from 'react';\nimport ChatBox from \"./ChatBox\";\nimport Message from \"./Message\";\n\nclass ChatMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n      messages: props.messages //gif : false,\n\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      messages: nextProps.messages\n    };\n  }\n\n  componentDidMount() {\n    this.assignHeight();\n    window.addEventListener(\"resize\", this.assignHeight.bind(this));\n  }\n\n  assignHeight() {\n    //let chat_height = this.state.gif ? 200 : 35;\n    let _docHeight = document.height !== undefined ? document.height : document.body.offsetHeight;\n\n    this.setState({\n      height: _docHeight - 65\n      /*- chat_height*/\n\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.assignHeight.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"messages col-xs-12 col-sm-12 col-md-8 col-lg-10\",\n      style: {\n        height: this.state.height + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.messages.length ? this.state.messages.map((message, i) => {\n      return React.createElement(Message, {\n        key: i,\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }) : React.createElement(\"div\", {\n      className: \"no-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"No messages in chat room\"), React.createElement(ChatBox, {\n      sendMessage: this.props.sendMessage //toggleGif={this.toggleGif.bind(this)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChatMessages;","map":{"version":3,"sources":["/Users/One/Desktop/Becode/chat/src/components/ChatMessages.js"],"names":["React","ChatBox","Message","ChatMessages","Component","constructor","props","state","height","messages","getDerivedStateFromProps","nextProps","prevState","componentDidMount","assignHeight","window","addEventListener","bind","_docHeight","document","undefined","body","offsetHeight","setState","componentWillUnmount","removeEventListener","render","length","map","message","i","sendMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG,CADA;AAETC,MAAAA,QAAQ,EAAGH,KAAK,CAACG,QAFR,CAGT;;AAHS,KAAb;AAKH;;AAED,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAqD;AACjD,WAAQ;AACJH,MAAAA,QAAQ,EAAGE,SAAS,CAACF;AADjB,KAAR;AAGH;;AAEDI,EAAAA,iBAAiB,GAAE;AACf,SAAKC,YAAL;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAiC,KAAKF,YAAL,CAAkBG,IAAlB,CAAuB,IAAvB,CAAjC;AACH;;AAEDH,EAAAA,YAAY,GAAE;AACV;AACA,QAAII,UAAU,GAAIC,QAAQ,CAACX,MAAT,KAAoBY,SAArB,GAAkCD,QAAQ,CAACX,MAA3C,GAAoDW,QAAQ,CAACE,IAAT,CAAcC,YAAnF;;AACA,SAAKC,QAAL,CAAc;AACVf,MAAAA,MAAM,EAAGU,UAAU,GAAG;AAAG;;AADf,KAAd;AAGH;;AAEDM,EAAAA,oBAAoB,GAAE;AAClBT,IAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqC,KAAKX,YAAL,CAAkBG,IAAlB,CAAuB,IAAvB,CAArC;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAiE,MAAA,KAAK,EAAE;AAAClB,QAAAA,MAAM,EAAG,KAAKD,KAAL,CAAWC,MAAX,GAAoB;AAA9B,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWE,QAAX,CAAoBkB,MAApB,GACG,KAAKpB,KAAL,CAAWE,QAAX,CAAoBmB,GAApB,CAAwB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACpC,aACI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,CAAd;AAAiB,QAAA,OAAO,EAAED,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,CADH,GAMG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAPR,EASQ,oBAAC,OAAD;AACI,MAAA,WAAW,EAAE,KAAKvB,KAAL,CAAWyB,WAD5B,CAEI;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATR,CADJ;AAiBH;;AApDsC;;AAuD3C,eAAe5B,YAAf","sourcesContent":["import React from 'react';\nimport ChatBox from \"./ChatBox\";\nimport Message from \"./Message\";\n\nclass ChatMessages extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            height : 0,\n            messages : props.messages,\n            //gif : false,\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        return  {\n            messages : nextProps.messages,\n        }\n    }\n\n    componentDidMount(){\n        this.assignHeight();\n        window.addEventListener(\"resize\",this.assignHeight.bind(this));\n    }\n\n    assignHeight(){\n        //let chat_height = this.state.gif ? 200 : 35;\n        let _docHeight = (document.height !== undefined) ? document.height : document.body.offsetHeight;\n        this.setState({\n            height : _docHeight - 65 /*- chat_height*/\n        });\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"resize\", this.assignHeight.bind(this));\n    }\n\n    render() {\n        return (\n            <div className=\"messages col-xs-12 col-sm-12 col-md-8 col-lg-10\" style={{height : this.state.height + 'px'}}>\n                {this.state.messages.length ? (\n                    this.state.messages.map((message, i) => {\n                        return (\n                            <Message key={i} message={message}/>\n                        )\n                    })\n                ) : <div className=\"no-message\">No messages in chat room</div>}\n                {(\n                    <ChatBox\n                        sendMessage={this.props.sendMessage}\n                        //toggleGif={this.toggleGif.bind(this)}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nexport default ChatMessages;"]},"metadata":{},"sourceType":"module"}