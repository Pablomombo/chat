{"ast":null,"code":"var _jsxFileName = \"/Users/One/Desktop/Becode/chat/src/components/Chat.js\";\nimport React, { Component } from 'react';\nimport ChatInput from './ChatInput';\nimport Users from \"./Users\";\nimport ChatMessages from './ChatMessages';\nimport { withRouter } from 'react-router-dom';\nimport socketIOClient from 'socket.io-client';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.socket = null;\n    this.state = {\n      username: localStorage.getItem('username') ? localStorage.getItem('username') : '',\n      uid: localStorage.getItem('uid') ? localStorage.getItem('uid') : this.generateUID(),\n      chat_ready: false,\n      users: [],\n      messages: [],\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.username.length) {\n      this.initChat();\n    }\n  }\n\n  generateUID() {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < 12; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    localStorage.setItem('uid', text);\n    return text;\n  }\n\n  setUsername(username, e) {\n    this.setState({\n      username: username\n    }, () => {\n      this.initChat();\n    });\n  }\n\n  sendMessage(message, e) {\n    console.log(message);\n    this.setState({\n      messages: this.state.messages.concat([{\n        username: localStorage.getItem('username'),\n        uid: localStorage.getItem('uid'),\n        message: message\n      }])\n    });\n    this.socket.emit('message', {\n      username: localStorage.getItem('username'),\n      uid: localStorage.getItem('uid'),\n      message: message\n    });\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    let messages = document.getElementsByClassName('messages')[0];\n    messages.scrollTop = messages.scrollHeight - messages.clientHeight;\n  }\n\n  initChat() {\n    localStorage.setItem('username', this.state.username);\n    this.setState({\n      chat_ready: true\n    });\n    this.socket = socketIOClient('ws://localhost:8989', {\n      query: 'username=' + this.state.username + '&uid=' + this.state.uid\n    });\n    this.socket.on('updateUsersList', function (users) {\n      console.log(users);\n      this.setState({\n        users: users\n      });\n    }.bind(this));\n    this.socket.on('message', function (message) {\n      this.setState({\n        messages: this.state.messages.concat([message])\n      });\n      this.scrollToBottom();\n    }.bind(this));\n  }\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Super chat\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"send\",\n      class: \"btn btn-primary\",\n      onClick: () => this.nextPath('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Logout\"))), this.state.chat_ready ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Users, {\n      users: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(ChatMessages, {\n      sendMessage: this.sendMessage.bind(this),\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })) : React.createElement(ChatInput, {\n      setUsername: this.setUsername.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(Chat);","map":{"version":3,"sources":["/Users/One/Desktop/Becode/chat/src/components/Chat.js"],"names":["React","Component","ChatInput","Users","ChatMessages","withRouter","socketIOClient","Chat","constructor","props","socket","state","username","localStorage","getItem","uid","generateUID","chat_ready","users","messages","message","componentDidMount","length","initChat","text","possible","i","charAt","Math","floor","random","setItem","setUsername","e","setState","sendMessage","console","log","concat","emit","scrollToBottom","document","getElementsByClassName","scrollTop","scrollHeight","clientHeight","query","on","bind","nextPath","path","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ChatInput from './ChatInput';\nimport Users from \"./Users\";\nimport ChatMessages from './ChatMessages';\nimport { withRouter } from 'react-router-dom';\nimport socketIOClient from 'socket.io-client';\n\nclass Chat extends Component {\n\n    constructor(props){\n        super(props);\n        this.socket = null;\n        this.state = {\n            username : localStorage.getItem('username') ? localStorage.getItem('username') : '',\n            uid : localStorage.getItem('uid') ? localStorage.getItem('uid') : this.generateUID(),\n            chat_ready : false,\n            users : [],\n            messages : [],\n            message : ''\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.username.length) {\n            this.initChat();\n        }\n    }\n\n    generateUID(){\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < 12; i++){\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        localStorage.setItem('uid', text);\n        return text;\n    }\n\n    setUsername(username, e){\n        this.setState({\n            username : username\n        }, () => {\n            this.initChat();\n        });\n    }\n\n    sendMessage(message, e){\n        console.log(message);\n        this.setState({\n            messages : this.state.messages.concat([{\n               username : localStorage.getItem('username'),\n               uid : localStorage.getItem('uid'),\n               message : message,\n           }])\n        });\n        this.socket.emit('message', {\n            username : localStorage.getItem('username'),\n            uid : localStorage.getItem('uid'),\n            message : message,\n        });\n        this.scrollToBottom();\n    }\n\n    scrollToBottom(){\n        let messages = document.getElementsByClassName('messages')[0];\n        messages.scrollTop = messages.scrollHeight - messages.clientHeight;\n    }\n\n    initChat(){\n        localStorage.setItem('username', this.state.username);\n        this.setState({\n            chat_ready : true,\n        });\n        this.socket = socketIOClient('ws://localhost:8989', {\n            query : 'username='+this.state.username+'&uid='+this.state.uid\n        });\n\n        this.socket.on('updateUsersList', function (users) {\n            console.log(users);\n            this.setState({\n                users : users\n            });\n        }.bind(this));\n\n        this.socket.on('message', function (message) {\n            this.setState({\n                messages : this.state.messages.concat([message])\n            });\n            this.scrollToBottom();\n        }.bind(this));\n    }\n\n    nextPath(path) {\n        this.props.history.push(path);    \n    }\n\n    render(){\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                <p>Super chat</p>\n                <form>\n                <button id=\"send\" class=\"btn btn-primary\" onClick= {() => this.nextPath ('/') }>Logout</button>\n                </form>\n                </header>\n                {this.state.chat_ready ? (\n                    <React.Fragment>\n                        <Users users={this.state.users}/>\n                        <ChatMessages\n                            sendMessage={this.sendMessage.bind(this)}\n                            messages={this.state.messages}\n                        />\n                    </React.Fragment>\n                ) : (\n                    <ChatInput\n                        setUsername={this.setUsername.bind(this)}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Chat);"]},"metadata":{},"sourceType":"module"}