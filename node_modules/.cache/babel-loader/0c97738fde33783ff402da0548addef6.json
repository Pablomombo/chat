{"ast":null,"code":"var _jsxFileName = \"/Users/One/Desktop/Becode/chat/src/components/ChatMessages.js\";\nimport React from 'react';\nimport ChatBox from \"./ChatBox\";\nimport GifBox from \"./GifBox\";\nimport Message from \"./Message\";\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 0,\n      messages: props.messages,\n      gif: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      messages: nextProps.messages\n    };\n  }\n\n  componentDidMount() {\n    this.assignHeight();\n    window.addEventListener(\"resize\", this.assignHeight.bind(this));\n  }\n\n  assignHeight() {\n    let chat_height = this.state.gif ? 200 : 35;\n\n    let _docHeight = document.height !== undefined ? document.height : document.body.offsetHeight;\n\n    this.setState({\n      height: _docHeight - 65 - chat_height\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.assignHeight.bind(this));\n  }\n\n  toggleGif(e) {\n    this.setState({\n      gif: !this.state.gif\n    }, () => {\n      this.assignHeight();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"messages col-xs-12 col-sm-12 col-md-8 col-lg-10\",\n      style: {\n        height: this.state.height + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.messages.length ? this.state.messages.map((message, i) => {\n      return React.createElement(Message, {\n        key: i,\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }) : React.createElement(\"div\", {\n      className: \"no-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"No messages in chat room\"));\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/One/Desktop/Becode/chat/src/components/ChatMessages.js"],"names":["React","ChatBox","GifBox","Message","Messages","Component","constructor","props","state","height","messages","gif","getDerivedStateFromProps","nextProps","prevState","componentDidMount","assignHeight","window","addEventListener","bind","chat_height","_docHeight","document","undefined","body","offsetHeight","setState","componentWillUnmount","removeEventListener","toggleGif","e","render","length","map","message","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG,CADA;AAETC,MAAAA,QAAQ,EAAGH,KAAK,CAACG,QAFR;AAGTC,MAAAA,GAAG,EAAG;AAHG,KAAb;AAKH;;AAED,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAqD;AACjD,WAAQ;AACJJ,MAAAA,QAAQ,EAAGG,SAAS,CAACH;AADjB,KAAR;AAGH;;AAEDK,EAAAA,iBAAiB,GAAE;AACf,SAAKC,YAAL;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAiC,KAAKF,YAAL,CAAkBG,IAAlB,CAAuB,IAAvB,CAAjC;AACH;;AAEDH,EAAAA,YAAY,GAAE;AACV,QAAII,WAAW,GAAG,KAAKZ,KAAL,CAAWG,GAAX,GAAiB,GAAjB,GAAuB,EAAzC;;AACA,QAAIU,UAAU,GAAIC,QAAQ,CAACb,MAAT,KAAoBc,SAArB,GAAkCD,QAAQ,CAACb,MAA3C,GAAoDa,QAAQ,CAACE,IAAT,CAAcC,YAAnF;;AACA,SAAKC,QAAL,CAAc;AACVjB,MAAAA,MAAM,EAAGY,UAAU,GAAG,EAAb,GAAkBD;AADjB,KAAd;AAGH;;AAEDO,EAAAA,oBAAoB,GAAE;AAClBV,IAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqC,KAAKZ,YAAL,CAAkBG,IAAlB,CAAuB,IAAvB,CAArC;AACH;;AAEDU,EAAAA,SAAS,CAACC,CAAD,EAAG;AACR,SAAKJ,QAAL,CAAc;AACVf,MAAAA,GAAG,EAAG,CAAC,KAAKH,KAAL,CAAWG;AADR,KAAd,EAEG,MAAM;AACL,WAAKK,YAAL;AACH,KAJD;AAKH;;AAEDe,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAiE,MAAA,KAAK,EAAE;AAACtB,QAAAA,MAAM,EAAG,KAAKD,KAAL,CAAWC,MAAX,GAAoB;AAA9B,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWE,QAAX,CAAoBsB,MAApB,GACG,KAAKxB,KAAL,CAAWE,QAAX,CAAoBuB,GAApB,CAAwB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACpC,aACI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,CAAd;AAAiB,QAAA,OAAO,EAAED,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,CADH,GAMG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAPR,CADJ;AAWH;;AAtDkC;;AAyDvC,eAAe9B,QAAf","sourcesContent":["import React from 'react';\nimport ChatBox from \"./ChatBox\";\nimport GifBox from \"./GifBox\";\nimport Message from \"./Message\";\n\nclass Messages extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            height : 0,\n            messages : props.messages,\n            gif : false,\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        return  {\n            messages : nextProps.messages,\n        }\n    }\n\n    componentDidMount(){\n        this.assignHeight();\n        window.addEventListener(\"resize\",this.assignHeight.bind(this));\n    }\n\n    assignHeight(){\n        let chat_height = this.state.gif ? 200 : 35;\n        let _docHeight = (document.height !== undefined) ? document.height : document.body.offsetHeight;\n        this.setState({\n            height : _docHeight - 65 - chat_height\n        });\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"resize\", this.assignHeight.bind(this));\n    }\n\n    toggleGif(e){\n        this.setState({\n            gif : !this.state.gif\n        }, () => {\n            this.assignHeight();\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"messages col-xs-12 col-sm-12 col-md-8 col-lg-10\" style={{height : this.state.height + 'px'}}>\n                {this.state.messages.length ? (\n                    this.state.messages.map((message, i) => {\n                        return (\n                            <Message key={i} message={message}/>\n                        )\n                    })\n                ) : <div className=\"no-message\">No messages in chat room</div>}\n            </div>\n        )\n    }\n}\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}