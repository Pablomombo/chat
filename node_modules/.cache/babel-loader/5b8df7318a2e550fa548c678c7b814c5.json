{"ast":null,"code":"var _jsxFileName = \"/Users/One/Desktop/Becode/chat/src/components/Chat.js\";\nimport React, { Component } from 'react';\nimport ChatInput from './ChatInput';\nimport Users from \"./Users\";\nimport ChatMessages from './ChatMessages';\nimport { withRouter } from 'react-router-dom';\nimport socketIOClient from 'socket.io-client';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.socket = null;\n    this.state = {\n      username: localStorage.getItem('username') ? localStorage.getItem('username') : '',\n      uid: localStorage.getItem('uid') ? localStorage.getItem('uid') : this.generateUID(),\n      chat_ready: false,\n      users: [],\n      messages: [],\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.username.length) {\n      this.initChat();\n    }\n  }\n\n  generateUID() {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < 12; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    localStorage.setItem('uid', text);\n    return text;\n  }\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Super chat\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"send\",\n      class: \"btn btn-primary\",\n      onClick: () => this.nextPath('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Logout\"))), this.state.chat_ready ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Users, {\n      users: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(ChatMessages, {\n      sendMessage: this.sendMessage.bind(this),\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })) : React.createElement(ChatInput, {\n      setUsername: this.setUsername.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(Chat);","map":{"version":3,"sources":["/Users/One/Desktop/Becode/chat/src/components/Chat.js"],"names":["React","Component","ChatInput","Users","ChatMessages","withRouter","socketIOClient","Chat","constructor","props","socket","state","username","localStorage","getItem","uid","generateUID","chat_ready","users","messages","message","componentDidMount","length","initChat","text","possible","i","charAt","Math","floor","random","setItem","nextPath","path","history","push","render","sendMessage","bind","setUsername"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ChatInput from './ChatInput';\nimport Users from \"./Users\";\nimport ChatMessages from './ChatMessages';\nimport { withRouter } from 'react-router-dom';\nimport socketIOClient from 'socket.io-client';\n\nclass Chat extends Component {\n\n    constructor(props){\n        super(props);\n        this.socket = null;\n        this.state = {\n            username : localStorage.getItem('username') ? localStorage.getItem('username') : '',\n            uid : localStorage.getItem('uid') ? localStorage.getItem('uid') : this.generateUID(),\n            chat_ready : false,\n            users : [],\n            messages : [],\n            message : ''\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.username.length) {\n            this.initChat();\n        }\n    }\n\n    generateUID(){\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < 12; i++){\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        localStorage.setItem('uid', text);\n        return text;\n    }\n\n    nextPath(path) {\n        this.props.history.push(path);    \n    }\n\n    render(){\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                <p>Super chat</p>\n                <form>\n                <button id=\"send\" class=\"btn btn-primary\" onClick= {() => this.nextPath ('/') }>Logout</button>\n                </form>\n                </header>\n                {this.state.chat_ready ? (\n                    <React.Fragment>\n                        <Users users={this.state.users}/>\n                        <ChatMessages\n                            sendMessage={this.sendMessage.bind(this)}\n                            messages={this.state.messages}\n                        />\n                    </React.Fragment>\n                ) : (\n                    <ChatInput\n                        setUsername={this.setUsername.bind(this)}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Chat);"]},"metadata":{},"sourceType":"module"}